-- Create tables for Employes integration

-- 1. Tokens table for OAuth2 authentication
CREATE TABLE public.employes_tokens (
  id bigint generated by default as identity primary key,
  access_token text not null,
  refresh_token text,
  expires_at timestamptz not null,
  created_at timestamptz default now(),
  updated_at timestamptz default now()
);

-- Enable RLS
ALTER TABLE public.employes_tokens ENABLE ROW LEVEL SECURITY;

-- Create policies (admin only access for now)
CREATE POLICY "Admin can manage employes tokens" 
ON public.employes_tokens 
FOR ALL 
USING (auth.uid() IS NOT NULL);

-- 2. Employee mapping table
CREATE TABLE public.employes_employee_map (
  id bigint generated by default as identity primary key,
  lms_staff_id uuid not null references staff(id) on delete cascade,
  employes_employee_id text not null,
  synced_at timestamptz default now(),
  unique(lms_staff_id, employes_employee_id)
);

-- Enable RLS
ALTER TABLE public.employes_employee_map ENABLE ROW LEVEL SECURITY;

-- Create policies
CREATE POLICY "All can view employee mappings" 
ON public.employes_employee_map 
FOR SELECT 
USING (true);

CREATE POLICY "Admin can manage employee mappings" 
ON public.employes_employee_map 
FOR ALL 
USING (auth.uid() IS NOT NULL);

-- 3. Sync logs table
CREATE TABLE public.employes_sync_logs (
  id bigint generated by default as identity primary key,
  action text not null,
  lms_staff_id uuid,
  employes_employee_id text,
  payload jsonb,
  status text not null,
  error_message text,
  created_at timestamptz default now()
);

-- Enable RLS
ALTER TABLE public.employes_sync_logs ENABLE ROW LEVEL SECURITY;

-- Create policies
CREATE POLICY "Admin can view sync logs" 
ON public.employes_sync_logs 
FOR SELECT 
USING (auth.uid() IS NOT NULL);

CREATE POLICY "System can insert sync logs" 
ON public.employes_sync_logs 
FOR INSERT 
WITH CHECK (true);

-- 4. Optional wage component mapping table
CREATE TABLE public.employes_wage_map (
  id bigint generated by default as identity primary key,
  lms_contract_id uuid not null references contracts(id) on delete cascade,
  employes_wage_component_id text not null,
  component_type text not null,
  synced_at timestamptz default now(),
  unique(lms_contract_id, employes_wage_component_id)
);

-- Enable RLS
ALTER TABLE public.employes_wage_map ENABLE ROW LEVEL SECURITY;

-- Create policies
CREATE POLICY "All can view wage mappings" 
ON public.employes_wage_map 
FOR SELECT 
USING (true);

CREATE POLICY "Admin can manage wage mappings" 
ON public.employes_wage_map 
FOR ALL 
USING (auth.uid() IS NOT NULL);

-- 5. Create indexes for performance
CREATE INDEX idx_employes_employee_map_lms_staff_id ON public.employes_employee_map (lms_staff_id);
CREATE INDEX idx_employes_employee_map_employes_id ON public.employes_employee_map (employes_employee_id);
CREATE INDEX idx_employes_sync_logs_status ON public.employes_sync_logs (status);
CREATE INDEX idx_employes_sync_logs_action ON public.employes_sync_logs (action);
CREATE INDEX idx_employes_sync_logs_created_at ON public.employes_sync_logs (created_at DESC);

-- 6. Create trigger for updated_at on tokens table
CREATE TRIGGER update_employes_tokens_updated_at
  BEFORE UPDATE ON public.employes_tokens
  FOR EACH ROW
  EXECUTE FUNCTION public.update_updated_at_column();